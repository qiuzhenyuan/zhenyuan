[{"content":"People spend a third of their time sleeping, but few of them pay enough attention to their sleep. This year I found myself deficult in falling asleep, so I started to read some books about sleep. Here are some experience I learned from books that are helpful to me.\nAttitude twards Sleeping  Nothing is extremely important: nothing is extremely important including a concept, a judgement, an experience. So if you can\u0026rsquo;t sleep well now, it is not extremely important for you. Just take it easy. Don\u0026rsquo;t share your insomnia experience: if you regard insomnia as a big problem and keep thinking about it, it will trouble you. Deal with insomnia with praticing attitude: there are no pressure to sleep or not not to sleep. When I cant\u0026rsquo;t fall asleep, I think of it as a chance to practice. Insomnia is the result not cause: insomnia is the result of anxiety, overuse of electronics etc. If our thoughts never stop, it will be hard for us to fall asleep.  Some Ways to Have a Good Sleep  Reduce stimulation: Sympathetic overstimulation is the biggest cause of our physical and mental imbalance in the 21st century. So stop reading feed news before sleep. Breth with your nose and breath deeply: breathing is one of a few exercises that can be carried out contiously and uncontiously. You can try to breath contiously. keeping tongue in touch with palate: that will make you breath with your nose. Yawn: yawning can relax our nervous. We can even yawn voluntarily.  Some theories  About Sympathetic and Parasympathetic   Sympathetic nervous system: The sympathetic nervous system is also known as the \u0026ldquo;stress response system\u0026rdquo;. When we encounter an emergency, we first let go of less urgent physiological functions, such as digestion, and deal with stress wholeheartedly. As mentioned earlier, cortisol is a stress hormone, which helps expand the response to stress at the endocrine level. Parasympathetic nervous system: the role of parasympathetic nervous system is just the opposite, just like in the gap after a crisis, helping the body relax and prepare for recuperation is also indispensable for survival.  About Coffee   The half-life period of coffee is 5 hours, which means if you drink a cup of coffee in 12:00 am, it remains a half a cup of coffee in your body in 5:00 pm. What coffee can help us is suppressing our netural response to fatigue.  Reference 《好睡：新的睡眠科学和医学》—— 杨定一\n中文版 （Chinese Version) 睡眠心态的转变  😄 没有一句话、一件事、一个观念、一个理念、一个结论、一个判断……有绝对的重要性。所以失眠又怎样？ 🙅 不要分享自己睡不好。当我们把一件事情当作问题，不断去想它，它自然变成一个问题。 🤔 使用练习的心态应对失眠。睡或不睡也就没有压力。甚至，没有睡着的这一刻还值得我们欢喜，因为终于有机会练习。 🥱 失眠是「果」不是「因」，更不是「病」。工作和升学的压力与焦虑，以及现代人长时间使用手机等电子产品，让五官和念头几乎都没有停过。睡眠，本来是身体的本能。然而，对现代人而言，要想睡得好，反而成了一个需要努力去达成的功课。 💤 睡眠，其实可以是我们最好的意识转变工具。很多事情和睡眠一样，并没有那么重要，不需要过分在意。  改善睡眠的一些做法  🔈︎ 减少信息对大脑的刺激。交感的过度刺激是我们21世纪最大的身心失衡的原因。 👃 用鼻孔呼吸。把呼吸拉长。呼吸是少有几个可以无意识进行也可以有意识进行的运动。 😜 舌抵上颚，会很自然地用鼻子呼吸，身体放松 🥱 打哈欠可以放松神经、消除疲劳。我们甚至可以主动地打哈欠。 🖥 睡前少看屏幕。屏幕产生的蓝光，降低褪黑激素分泌的效果相当直接。  一些理论  🧠 关于交感与副交感 a. 交感神经系统又被称为“压力反应系统”，让我们在遇到紧急状况时，先放掉不那么急迫的生理功能，例如消化，而全心全意地应付压力。前面谈过皮质醇是压力荷尔蒙，也就是在内分泌的层面帮助扩大压力的反应。\nb. 副交感神经系统的作用是刚好相反，就像是在危机过后的空档，帮助身体放松下来，准备休养生息，也是生存所不可或缺。 ☕️ 咖啡的半衰期时5小时；🚬尼古丁的半衰期时2小时。 ☕️ 咖啡带来的清醒，其实是去压制身体面对疲劳的自然反应。压制腺苷的受体。  参考资料 《好睡：新的睡眠科学和医学》—— 杨定一\n","permalink":"https://zhenyuan.vercel.app/post/good_sleep/","summary":"People spend a third of their time sleeping, but few of them pay enough attention to their sleep. This year I found myself deficult in falling asleep, so I started to read some books about sleep. Here are some experience I learned from books that are helpful to me.\nAttitude twards Sleeping  Nothing is extremely important: nothing is extremely important including a concept, a judgement, an experience. So if you can\u0026rsquo;t sleep well now, it is not extremely important for you.","title":"How to Have a Good Sleep"},{"content":"在写代码时考虑别人是否能快速理解，是一件很值得称赞的事情。事实上，把代码的可读性提高不仅仅是方便别人，也是方便自己。那些漫不经心写下的烂代码，也许半个月后自己也看不懂了:) 在99%的场景下，追求代码可读性比追求代码的极致性能更重要。\n 代码质量的标准：在《Clean Code》一书中Bob认为在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。 可读性基本定理：代码的写法应该让别人理解它所需的时间最小化。\n 命名的改进  更多信息：让函数名和变量名承载更多的信息，避免使用泛泛的名字，比如 i, j, k, tmp, retVal 等 具体优于抽象：用具体的名字比抽象的名字好。比如 CanListenOnPort 就比 CanStartServer 更加具体。 名字长度与作用域：作用域越大的变量，名字应该越长。为作用域大的名字采用更长的名字——不要用让人费解的一个或两个字母的名字来命名在几屏之间都可见的变量。 细节：如果有，请给变量名带上重要细节, 例如单位 ms。 歧义：避免使用有歧义的命名，如filter。filter返回的，是过滤前还是过滤后的呢？  怎么写好注释  什么地方要写注释：站在代码读者的角度思考，让人说“啊？”的地方就应该加上注释 什么地方不需要注释：能从代码迅速推断出事实的地方 常量要有故事：说明为啥要用这个常量  简化循环和逻辑  if/else 语句块：一般来说优先处理正逻辑。比如用 if(debug) 不用 if(!debug) 减少循环嵌套：嵌套的代码块需要更加集中精力去理解。每层新的嵌套都需要读者把更多的上下文“压入栈”。应该把它们改写成更加“线性”的代码来避免深嵌套。 提前返回：通常来讲提早返回可以减少嵌套并让代码整洁。“保护语句”（在函数顶部处理简单的情况时）尤其有用。 别用 goto  优化变量的可读性  1.变量越多，就越难全部跟踪它们的动向。\n2.变量的作用域越大，就需要跟踪它的动向越久。\n3.变量改变得越频繁，就越难以跟踪它的当前值。\n  减少变量：只用一次的变量，也许可以直接干到。例如now:= time.Now() 如果只用一次，就没必要定义这个变量。因为程序员看到它定义出来会以为它会被多次用到，但它实际又没有 缩小变量作用域：让你的变量对尽量少的代码行可见。有时可以把定义向下移。因为读者在读到后面之前不需要知道所有变量，所以可以简单地把每个定义移到对它的使用之前 只写一次的变量更好：操作一个变量的地方越多，越难确定它的当前值。  更高层次的组织  思考更高层次的目标：看看某个函数或代码块，问问你自己：  这段代码高层次的目标是什么？ 对于每一行代码，问一下：它是直接为了目标而工作吗？这段代码高层次的目标是什么呢？   抽函数：如果足够的行数在解决不相关的子问题，抽取代码到独立的函数中。 分段，一次只做一件事：把代码组织得一次只做一件事情。但是就算你不这样做，你仍然可以在函数内部组织代码，使得它感觉像是有分开的逻辑段。  参考 《编写可读代码的艺术》\n","permalink":"https://zhenyuan.vercel.app/post/%E7%BC%96%E5%86%99%E5%8F%AF%E8%AF%BB%E4%BB%A3%E7%A0%81%E7%9A%84%E8%89%BA%E6%9C%AF/","summary":"在写代码时考虑别人是否能快速理解，是一件很值得称赞的事情。事实上，把代码的可读性提高不仅仅是方便别人，也是方便自己。那些漫不经心写下的烂代码，也许半个月后自己也看不懂了:) 在99%的场景下，追求代码可读性比追求代码的极致性能更重要。\n 代码质量的标准：在《Clean Code》一书中Bob认为在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。 可读性基本定理：代码的写法应该让别人理解它所需的时间最小化。\n 命名的改进  更多信息：让函数名和变量名承载更多的信息，避免使用泛泛的名字，比如 i, j, k, tmp, retVal 等 具体优于抽象：用具体的名字比抽象的名字好。比如 CanListenOnPort 就比 CanStartServer 更加具体。 名字长度与作用域：作用域越大的变量，名字应该越长。为作用域大的名字采用更长的名字——不要用让人费解的一个或两个字母的名字来命名在几屏之间都可见的变量。 细节：如果有，请给变量名带上重要细节, 例如单位 ms。 歧义：避免使用有歧义的命名，如filter。filter返回的，是过滤前还是过滤后的呢？  怎么写好注释  什么地方要写注释：站在代码读者的角度思考，让人说“啊？”的地方就应该加上注释 什么地方不需要注释：能从代码迅速推断出事实的地方 常量要有故事：说明为啥要用这个常量  简化循环和逻辑  if/else 语句块：一般来说优先处理正逻辑。比如用 if(debug) 不用 if(!debug) 减少循环嵌套：嵌套的代码块需要更加集中精力去理解。每层新的嵌套都需要读者把更多的上下文“压入栈”。应该把它们改写成更加“线性”的代码来避免深嵌套。 提前返回：通常来讲提早返回可以减少嵌套并让代码整洁。“保护语句”（在函数顶部处理简单的情况时）尤其有用。 别用 goto  优化变量的可读性  1.变量越多，就越难全部跟踪它们的动向。\n2.变量的作用域越大，就需要跟踪它的动向越久。\n3.变量改变得越频繁，就越难以跟踪它的当前值。\n  减少变量：只用一次的变量，也许可以直接干到。例如now:= time.Now() 如果只用一次，就没必要定义这个变量。因为程序员看到它定义出来会以为它会被多次用到，但它实际又没有 缩小变量作用域：让你的变量对尽量少的代码行可见。有时可以把定义向下移。因为读者在读到后面之前不需要知道所有变量，所以可以简单地把每个定义移到对它的使用之前 只写一次的变量更好：操作一个变量的地方越多，越难确定它的当前值。  更高层次的组织  思考更高层次的目标：看看某个函数或代码块，问问你自己：  这段代码高层次的目标是什么？ 对于每一行代码，问一下：它是直接为了目标而工作吗？这段代码高层次的目标是什么呢？   抽函数：如果足够的行数在解决不相关的子问题，抽取代码到独立的函数中。 分段，一次只做一件事：把代码组织得一次只做一件事情。但是就算你不这样做，你仍然可以在函数内部组织代码，使得它感觉像是有分开的逻辑段。  参考 《编写可读代码的艺术》","title":"如何提高代码可读性"}]